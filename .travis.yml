# Travis CI build config
# https://config.travis-ci.com

language: c

notifications:
  email:
    on_success: always

addons:

  # Linux
  apt:
    packages:
      - python3
      - python3-pip

      # Target: all
      - cmake
      - make

      # Target: x86-32
      - nasm # Assembler
      - multiboot # Multiboot header files and `grub-file` to verify compliance

      # Target: x86-32, Script: iso.sh
      - grub-common
      - xorriso

      # Target: x86-32, Script: vm.sh
      # https://www.virtualbox.org/wiki/Linux_Downloads

      # Target: x86-32, Host: Linux 64-bit
      - gcc-multilib # cross-compile 32-bit applications on 64-bit systems

  # macOS
  homebrew:
    packages:
      - python@3

jobs:
  include:

    - name: Linux (c99)
      os: linux
      dist: bionic
      compiler: c99

    - name: Linux (Clang)
      os: linux
      dist: bionic
      compiler: clang

    - name: Linux (GCC)
      os: linux
      dist: bionic
      compiler: gcc

    - name: macOS (c99)
      os: osx
      compiler: c99

    - name: macOS (Clang)
      os: osx
      compiler: clang

    - name: macOS (GCC)
      os: osx
      compiler: gcc-9
      env: CCNAME=gcc

    # Redirect each script's stderr to stdout, since output is currently
    # mangled in Windows builds for some reason.
    # https://travis-ci.community/t/stderr-output-is-shown-after-the-build-log-rather-than-inline/5124/1
    - name: Windows (CL)
      os: windows
      compiler: cl
      env:
        - PYTHON_PATH='C:\Python'
        - PATH=$TRAVIS_BUILD_DIR:$PYTHON_PATH:$PATH
      # TODO use WinGet to install dependencies?
      install:
        - choco install vswhere
        # Hardcode the installation path to avoid `refreshenv` for build script
        # simplicity and faster build times.
        # https://chocolatey.org/docs/how-to-parse-package-parameters-argument#installing-with-package-parameters
        # https://chocolatey.org/docs/helpers-get-package-parameters#description
        - choco install python3 --params "'/InstallDir:$PYTHON_PATH'"
        - python -m pip install -r requirements.txt 2>&1
      before_script:
        - |
          echo "
              call \"$(vswhere -latest -products '*' -find '**\vcvarsall.*')\" amd64
              @echo on
              nmake.exe %*
          " | tee nmake.bat
      script:
        - nmake.bat PYTHON=python all 2>&1
        - cd "$TRAVIS_BUILD_DIR/specification"
        - nmake.bat PYTHON=python all 2>&1
        - cd "$TRAVIS_BUILD_DIR/interpreter/core"
        - nmake.bat all 2>&1
        - cd "$TRAVIS_BUILD_DIR/interpreter/native"
        - nmake.bat all 2>&1

before_script: python3 -m pip install -r requirements.txt
script:
  - make all
  - cd "$TRAVIS_BUILD_DIR/specification"
  - make all
  - cd "$TRAVIS_BUILD_DIR/interpreter/core"
  - make all
  - cd "$TRAVIS_BUILD_DIR/interpreter/native"
  - make all
