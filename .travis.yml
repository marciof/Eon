# Travis CI build config
# https://config.travis-ci.com

language: c

env:
  global: VERBOSE=ON

jobs:
  include:

    - os: linux
      compiler: gcc
      script:
        - cmake -Wdev --warn-uninitialized -DBUILD_NATIVE=ON -DBUILD_JAVASCRIPT=ON -DBUILD_X86_32=ON "$TRAVIS_BUILD_DIR"
        - cmake --build .

    - os: linux
      compiler: clang
      script:
        - cmake -Wdev --warn-uninitialized -DBUILD_NATIVE=ON -DBUILD_JAVASCRIPT=ON -DBUILD_X86_32=ON "$TRAVIS_BUILD_DIR"
        - cmake --build .

    - os: osx
      script:
        - cmake -Wdev --warn-uninitialized -DBUILD_NATIVE=ON -DBUILD_JAVASCRIPT=ON -DBUILD_X86_32=ON "$TRAVIS_BUILD_DIR"
        - cmake --build .

    - os: windows
      script:
        - cmake -Wdev --warn-uninitialized -DBUILD_NATIVE=ON -DBUILD_JAVASCRIPT=ON -DBUILD_X86_32=ON "$TRAVIS_BUILD_DIR"
        - cmake --build .

    - name: Core - Linux (GCC)
      os: linux
      dist: bionic
      compiler: gcc
      script:
        - cd "$TRAVIS_BUILD_DIR/specification"
        - make all
        - cd "$TRAVIS_BUILD_DIR/interpreter/core"
        - make all

    - name: Core - Linux (Clang)
      os: linux
      dist: bionic
      compiler: clang
      script:
        - cd "$TRAVIS_BUILD_DIR/specification"
        - make all
        - cd "$TRAVIS_BUILD_DIR/interpreter/core"
        - make all

    - name: Core - macOS (Clang)
      os: osx
      compiler: clang
      script:
        - cd "$TRAVIS_BUILD_DIR/specification"
        - make all
        - cd "$TRAVIS_BUILD_DIR/interpreter/core"
        - make all

    - name: Core - Windows (CL)
      os: windows
      compiler: cl
      # TODO use WinGet?
      before_install:
        - |-
            powershell -Command '& {
              choco install vswhere

              # Remove all existing Python installations.
              choco uninstall mingw
              choco install python3

              Import-Module PowerShellGet
              # Get `Invoke-Batch-File`.
              Install-Module -AllowClobber -Force Pscx

              Invoke-BatchFile (Get-Command RefreshEnv).Source
              python -m pip install commonmark
            }'
      script:
        - |-
          powershell -Command '& {
            Invoke-BatchFile (Get-Command RefreshEnv).Source
            Invoke-BatchFile (vswhere -latest -products '*' -find '**\vcvarsall.*') amd64

            cd "$env:TRAVIS_BUILD_DIR\specification"
            nmake PYTHON=python all

            cd "$env:TRAVIS_BUILD_DIR\interpreter\core"
            nmake all
          }'

addons:
  apt:
    packages:
      # Target: all
      - cmake
      - make

      # Target: x86-32
      - nasm # Assembler
      - multiboot # Multiboot header files and `grub-file` to verify compliance

      # Target: x86-32, Script: iso.sh
      - grub-common
      - xorriso

      # Target: x86-32, Script: vm.sh
      # https://www.virtualbox.org/wiki/Linux_Downloads

      # Target: x86-32, Host: Linux 64-bit
      - gcc-multilib # cross-compile 32-bit applications on 64-bit systems

notifications:
  email:
    on_success: always
