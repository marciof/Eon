* interpreter

** TODO why are builds placed alongside sources and not in the build directory?

** TODO avoid variable-length arrays for portability?

** TODO use ccache for speed? https://ccache.dev/

** TODO access struct members directly, instead of wrappers for transparency

** TODO make the system more resilient

- warn more instead of aborting
- handle (ignore?) errors during logging

** TODO logging of long integers (eg. 64-bit Multiboot mem region addr/len)

** TODO how to add versioning to the core/native libraries and struct-compat?

** TODO "Why isn’t someone using my software product or open source tool? It’s good!"

- https://news.ycombinator.com/item?id=17642147
- https://threadreaderapp.com/thread/921921604140937216.html

** TODO financing

- https://www.patreon.com/zloirock
- https://opencollective.com/core-js
- https://flattr.com
- https://www.buymeacoffee.com/mweststrate
- https://itsfoss.com/open-source-funding-platforms/

* javascript

** TODO always append '\0' to Str instances?

* native

** TODO colored logging

* x86-32

** TODO how to have proper documentation comments in NASM Assembly source code?

** TODO remove direct references to globals/singletons

- make `Text` not directly reference the global `Gfx` memory map?
- pass Multiboot variables to `main` instead of using globals
- avoid these repeated calls to `*_get()`

** TODO upgrade to Multiboot 2?

** TODO look into adding support for x86-64

- ASFLAGS += -f elf64
- CCFLAGS += -m64
- LINKFLAGS += -m elf_x86_64

** TODO fix static linking

- need `-rdynamic` when linking to allow getting backtraces from within?
- why can't the final executable static link against the core library?

** TODO implement shutdown (it currently halts -- use it for debugging?)

** TODO timestamp logging
